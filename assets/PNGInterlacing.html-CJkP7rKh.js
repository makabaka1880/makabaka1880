import{_ as a,c as t,g as i,o as s}from"./app-CVkNJmK6.js";const n="/assets/CS/PNGInterlacing/1.webp",r="/assets/CS/PNGInterlacing/2.webp",l="/assets/CS/PNGInterlacing/3.webp",p="/assets/CS/PNGInterlacing/4.webp",o="/assets/CS/PNGInterlacing/Prog.webp",c="/assets/CS/PNGInterlacing/Inter.webp",g={};function h(d,e){return s(),t("div",null,e[0]||(e[0]=[i('<h1 id="png-图片加载类型" tabindex="-1"><a class="header-anchor" href="#png-图片加载类型"><span>PNG 图片加载类型</span></a></h1><h2 id="_0x00-序言" tabindex="-1"><a class="header-anchor" href="#_0x00-序言"><span>0x00 序言</span></a></h2><p>最近在做学校项目，发现一个几万年前star过的一个很看好的库<a href="https://sli.dev" target="_blank" rel="noopener noreferrer">slidev</a>更新到0.5 Beta了，感觉想试试</p><figure><img src="'+n+'" alt="效果也确实不错" tabindex="0" loading="lazy"><figcaption>效果也确实不错</figcaption></figure><p>但唯一的问题就是Deploy之后由于是在Github Pages做的托管所以网很差，assets加载很慢</p><p>因此就出现了这种问题：</p><figure><img src="'+r+'" alt="啊啊啊啊破网啊啊啊啊" tabindex="0" loading="lazy"><figcaption>啊啊啊啊破网啊啊啊啊</figcaption></figure><figure><img src="'+l+'" alt="诶 出来一点" tabindex="0" loading="lazy"><figcaption>诶 出来一点</figcaption></figure><figure><img src="'+p+'" alt="咋只出来一半啊！！！" tabindex="0" loading="lazy"><figcaption>咋只出来一半啊！！！</figcaption></figure><p>但我们在网上看到的很多都是这样的：</p><p>这是为啥啊？</p><h2 id="_0x01-png加载型" tabindex="-1"><a class="header-anchor" href="#_0x01-png加载型"><span>0x01 PNG加载型</span></a></h2><p>众所周知，PNG这么一个文件直接下载到本地然后加载几乎是不可能的，因此出现了加载型这种概念：</p><div class="hint-container tip"><p class="hint-container-title">PNG加载型</p><p><strong>PNG加载型 (PNG Loading Types)</strong> 指的是在加载PNG图片时常用的两种方式：<strong>逐步加载 (Progressive)</strong> 和 <strong>交错加载 (Interlaced)</strong>。<br> 逐步加载方式是按顺序从上到下加载图像，适合网络速度较快时使用，因为用户会先看到完整但模糊的图片，随后逐步清晰。<br> 交错加载方式则将图片分成多个扫描线组，先加载整体的低分辨率版本，再逐步补充细节，适合慢速网络环境，让用户快速预览到完整的图片轮廓。</p></div><h3 id="逐步加载-progressive" tabindex="-1"><a class="header-anchor" href="#逐步加载-progressive"><span>逐步加载 Progressive</span></a></h3><p>这种形式就是我刚刚展示的一行行扫描的加载方式：</p><figure><img src="'+o+'" alt="逐步加载的PNG" tabindex="0" loading="lazy"><figcaption>逐步加载的PNG</figcaption></figure><ul><li><strong>优势</strong> 加载出来就是最佳的图像</li><li><strong>缺点</strong> 没法一次性就加载出来整个图像</li></ul><h3 id="交叉加载-interlaced" tabindex="-1"><a class="header-anchor" href="#交叉加载-interlaced"><span>交叉加载 Interlaced</span></a></h3><p>这种形式就是我刚刚展示的一行行扫描的加载方式：</p><figure><img src="'+c+'" alt="交叉加载的PNG" tabindex="0" loading="lazy"><figcaption>交叉加载的PNG</figcaption></figure><ul><li><strong>优势</strong> 可以将整个图像快速加载出来</li><li><strong>缺点</strong> 质量逐步增加，没法一次到位</li></ul><h2 id="_0x02-如何转换" tabindex="-1"><a class="header-anchor" href="#_0x02-如何转换"><span>0x02 如何转换</span></a></h2><p>我这里要使用一个叫<code>pillow</code>的库</p><div class="hint-container important"><p class="hint-container-title">重要</p><p>一下内容默认读者使用<code>conda</code>做环境管理。若无，以下zsh操作只需要这样：</p><div class="language-zsh line-numbers-mode" data-highlighter="shiki" data-ext="zsh" data-title="zsh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">pip3</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> install</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> pillow</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></div><p>我们先新建环境</p><div class="language-zsh line-numbers-mode" data-highlighter="shiki" data-ext="zsh" data-title="zsh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">conda</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> create</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;PNGConvert&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>',27)]))}const m=a(g,[["render",h],["__file","PNGInterlacing.html.vue"]]),b=JSON.parse('{"path":"/CS/miscellaneous/PNGInterlacing.html","title":"PNG 图片加载类型","lang":"zh-CN","frontmatter":{"description":"PNG 图片加载类型 0x00 序言 最近在做学校项目，发现一个几万年前star过的一个很看好的库slidev更新到0.5 Beta了，感觉想试试 效果也确实不错效果也确实不错 但唯一的问题就是Deploy之后由于是在Github Pages做的托管所以网很差，assets加载很慢 因此就出现了这种问题： 啊啊啊啊破网啊啊啊啊啊啊啊啊破网啊啊啊啊 诶 ...","head":[["meta",{"property":"og:url","content":"https://makabaka1880.xyz/CS/miscellaneous/PNGInterlacing.html"}],["meta",{"property":"og:site_name","content":"Makabaka1880的博客"}],["meta",{"property":"og:title","content":"PNG 图片加载类型"}],["meta",{"property":"og:description","content":"PNG 图片加载类型 0x00 序言 最近在做学校项目，发现一个几万年前star过的一个很看好的库slidev更新到0.5 Beta了，感觉想试试 效果也确实不错效果也确实不错 但唯一的问题就是Deploy之后由于是在Github Pages做的托管所以网很差，assets加载很慢 因此就出现了这种问题： 啊啊啊啊破网啊啊啊啊啊啊啊啊破网啊啊啊啊 诶 ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://makabaka1880.xyz/assets/CS/PNGInterlacing/1.webp"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-03-22T03:53:16.000Z"}],["meta",{"property":"article:modified_time","content":"2025-03-22T03:53:16.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"PNG 图片加载类型\\",\\"image\\":[\\"https://makabaka1880.xyz/assets/CS/PNGInterlacing/1.webp\\",\\"https://makabaka1880.xyz/assets/CS/PNGInterlacing/2.webp\\",\\"https://makabaka1880.xyz/assets/CS/PNGInterlacing/3.webp\\",\\"https://makabaka1880.xyz/assets/CS/PNGInterlacing/4.webp\\",\\"https://makabaka1880.xyz/assets/CS/PNGInterlacing/Prog.webp\\",\\"https://makabaka1880.xyz/assets/CS/PNGInterlacing/Inter.webp\\"],\\"dateModified\\":\\"2025-03-22T03:53:16.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Makabaka1880\\",\\"url\\":\\"https://makabaka1880.xyz\\"}]}"]]},"headers":[{"level":2,"title":"0x00 序言","slug":"_0x00-序言","link":"#_0x00-序言","children":[]},{"level":2,"title":"0x01 PNG加载型","slug":"_0x01-png加载型","link":"#_0x01-png加载型","children":[{"level":3,"title":"逐步加载 Progressive","slug":"逐步加载-progressive","link":"#逐步加载-progressive","children":[]},{"level":3,"title":"交叉加载 Interlaced","slug":"交叉加载-interlaced","link":"#交叉加载-interlaced","children":[]}]},{"level":2,"title":"0x02 如何转换","slug":"_0x02-如何转换","link":"#_0x02-如何转换","children":[]}],"git":{"createdTime":1734876375000,"updatedTime":1742615596000,"contributors":[{"name":"makabaka1880","username":"makabaka1880","email":"makabaka1880@outlook.com","commits":3,"url":"https://github.com/makabaka1880"}]},"readingTime":{"minutes":1.77,"words":530},"filePathRelative":"CS/miscellaneous/PNGInterlacing.md","localizedDate":"2024年12月22日","excerpt":"\\n<h2>0x00 序言</h2>\\n<p>最近在做学校项目，发现一个几万年前star过的一个很看好的库<a href=\\"https://sli.dev\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">slidev</a>更新到0.5 Beta了，感觉想试试</p>\\n<figure><img src=\\"/assets/CS/PNGInterlacing/1.webp\\" alt=\\"效果也确实不错\\" tabindex=\\"0\\" loading=\\"lazy\\"><figcaption>效果也确实不错</figcaption></figure>\\n<p>但唯一的问题就是Deploy之后由于是在Github Pages做的托管所以网很差，assets加载很慢</p>","autoDesc":true}');export{m as comp,b as data};
